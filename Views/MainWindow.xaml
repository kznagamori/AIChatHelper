<Window x:Class="AIChatHelper.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        xmlns:conv="clr-namespace:AIChatHelper.Core.Helper"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:controls="clr-namespace:AIChatHelper.Core.Controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Style="{StaticResource MaterialDesignWindow}"
        TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
        Background="{DynamicResource MaterialDesign.Brush.Background}"
        mc:Ignorable="d"
        Title="AIChatHelper" Height="800" Width="1400"
        Icon="pack://siteoforigin:,,,/Assets/app.ico">
    <Window.Resources>
        <conv:HistoryItemDisplayConverter x:Key="HistoryItemDisplayConverter" />
        <conv:ThemeAwareImageConverter x:Key="ThemeAwareImageConverter" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding LeftColumnWidth, Mode=TwoWay}" />
            <ColumnDefinition Width="{Binding SplitterWidth, Mode=TwoWay}" />
            <ColumnDefinition Width="{Binding RightColumnWidth, Mode=TwoWay}" />
        </Grid.ColumnDefinitions>

        <!-- 左：TabControl -->
        <TabControl x:Name="TabControlMain"
                    Grid.Column="0"
                    Visibility="{Binding LeftPaneVisibility}">
            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <DockPanel>
                        <ScrollViewer DockPanel.Dock="Top"
                                    HorizontalScrollBarVisibility="Disabled"
                                    VerticalScrollBarVisibility="Auto">
                            <WrapPanel x:Name="HeaderPanel"
                                    IsItemsHost="True"
                                    Orientation="Horizontal"
                                    KeyboardNavigation.TabIndex="1"/>
                        </ScrollViewer>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                        Content="{TemplateBinding SelectedContent}"
                                        ContentSource="SelectedContent"
                                        KeyboardNavigation.TabIndex="2"/>
                    </DockPanel>
                </ControlTemplate>
            </TabControl.Template>
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem" BasedOn="{StaticResource MaterialDesignTabItem}">
                    <Setter Property="MaxWidth" Value="200" />
                    <Setter Property="Height" Value="40" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Style>
            </TabControl.ItemContainerStyle>
        </TabControl>

        <!-- Splitter -->
        <GridSplitter Grid.Column="1"
                    Width="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch"
                    ShowsPreview="True"
                    Visibility="{Binding SplitterVisibility}"
                    DragCompleted="GridSplitter_DragCompleted" />

        <!-- 右：UI -->
        <Grid Grid.Column="2"
              Margin="10"
              Visibility="{Binding RightPaneVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- 1行目：テンプレート関連のコントロール -->
            <DockPanel Grid.Row="0" LastChildFill="False">
                <!-- 左寄せのコントロール -->
                <StackPanel DockPanel.Dock="Left"
                            Orientation="Horizontal"
                            Margin="0,0,8,0">
                    <!-- 1. テンプレートフォルダーを開くボタン - テーマに応じたアイコン -->
                    <Button Width="48" Height="48"
                            Style="{StaticResource MaterialDesignIconForegroundButton}"
                            Command="{Binding OpenTemplateFolderCommand}"
                            Margin="0,0,8,0"
                            x:Name="TemplateButton">
                            <materialDesign:PackIcon
                                Width="48"
                                Height="48"
                                Kind="TextSearchVariant" />
                    </Button>

                    <!-- テンプレート選択 ComboBox -->
                    <ComboBox Width="200"
                            Margin="0,0,16,0"
                            ItemsSource="{Binding Templates}"
                            SelectedItem="{Binding SelectedTemplate, Mode=TwoWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="DropDownClosed">
                            <i:InvokeCommandAction
                                Command="{Binding TemplateDropDownClosedCommand}"
                                CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>

                    <!-- 履歴管理ダイアログを開くボタン - テーマに応じたアイコン -->
                    <Button Width="48" Height="48"
                            Style="{StaticResource MaterialDesignIconForegroundButton}"
                            Command="{Binding OpenHistoryManagementWindowCommand}"
                            Margin="0,0,8,0"
                            x:Name="HistoryButton">
                            <materialDesign:PackIcon
                                Width="48"
                                Height="48"
                                Kind="History" />
                    </Button>
                </StackPanel>
                <!-- 右寄せのコントロール -->
                <StackPanel DockPanel.Dock="Right"
                            Orientation="Horizontal"
                            Margin="0,0,8,0">
                    <!-- Informationダイアログを開くボタン - テーマに応じたアイコン -->
                    <Button Width="24" Height="24"
                            Style="{StaticResource MaterialDesignIconForegroundButton}"
                            Command="{Binding OpenInformationWindowCommand}"
                            Margin="0,0,8,0"
                            x:Name="InformationButton">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="InformationOutline" />
                    </Button>
                </StackPanel>
            </DockPanel>

            <!-- 検索用ComboBox -->
            <materialDesign:Card Grid.Row="1"
                            Margin="0,8,0,8"
                            Padding="8,4">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0"
                            Style="{StaticResource MaterialDesignOutlinedComboBox}"
                            materialDesign:HintAssist.Hint="検索"
                            ItemsSource="{Binding SearchHistories}"
                            Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                            IsEditable="True"
                            Width="Auto"
                            HorizontalAlignment="Stretch">
                        <ComboBox.InputBindings>
                            <KeyBinding Key="Return" Command="{Binding SearchHistoryCommand}"/>
                        </ComboBox.InputBindings>
                    </ComboBox>

                    <Button Grid.Column="1"
                            Style="{StaticResource MaterialDesignIconButton}"
                            Command="{Binding ClearSearchCommand}"
                            Margin="4,0,0,0"
                            ToolTip="検索クリア">
                        <materialDesign:PackIcon Kind="Close" Width="18" Height="18"/>
                    </Button>
                </Grid>
            </materialDesign:Card>

            <!-- 2行目：履歴表示（Slackスタイル） -->
            <Border Grid.Row="2"
                   Margin="0,0,0,8"
                   Height="300"
                   BorderThickness="1"
                   BorderBrush="{DynamicResource MaterialDesign.Brush.Divider}"
                   CornerRadius="4">
                <controls:SlackStyleHistoryView x:Name="SlackHistoryView"
                                              HistoryItems="{Binding HistoryItems}"
                                              SelectedHistoryItem="{Binding SelectedHistoryItem, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="HistoryItemDoubleClicked">
                            <i:InvokeCommandAction
                                Command="{Binding HistoryClickedCommand}"
                                CommandParameter="{Binding SelectedHistoryItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls:SlackStyleHistoryView>
            </Border>

            <!-- 3行目：TextBox -->
            <Grid Grid.Row="3" x:Name="EditorContainer">
                <controls:AvalonTextEditor x:Name="AvalonEditor"
                                        Text="{Binding EditorText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ExecuteCommand">
                            <i:InvokeCommandAction
                                Command="{Binding ChatToServiceCommand}"
                                CommandParameter="{Binding ElementName=TabControlMain, Path=SelectedContent}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls:AvalonTextEditor>
            </Grid>

            <!-- 4行目：ボタン類 -->
            <Grid Grid.Row="4" Margin="0,8,0,0">
                <DockPanel LastChildFill="False">
                    <!-- 左寄せのコントロール -->
                    <StackPanel DockPanel.Dock="Left"
                                Orientation="Horizontal"
                                Margin="0,0,8,0">
                        <ToggleButton x:Name="ThemeToggleButton"
                            ToolTip="ダーク/ライトテーマ切替"
                            Command="{Binding ToggleThemeCommand}"
                            IsChecked="{Binding IsDarkTheme}">
                        </ToggleButton>
                    </StackPanel>

                    <!-- 右寄せのコントロール -->
                    <StackPanel DockPanel.Dock="Right"
                                Orientation="Horizontal"
                                Margin="0,0,8,0">
                        <Button Content="{Binding ChatButtonText}"
                            Width="120"
                            Command="{Binding ChatToServiceCommand}"
                            CommandParameter="{Binding ElementName=TabControlMain, Path=SelectedContent}"
                            Margin="0,0,8,0"
                            Style="{StaticResource MaterialDesignPaperButton}"
                            IsEnabled="{Binding IsSendingNot}" />
                        <Button Content="クリア"
                            Width="120"
                            Command="{Binding ClearEditorCommand}"
                            Style="{StaticResource MaterialDesignPaperButton}"
                            Margin="0,0,8,0" />
                        <Button Content="保存"
                            Width="120"
                            Command="{Binding SaveHistoryCommand}"
                            Style="{StaticResource MaterialDesignPaperButton}"
                            Margin="0,0,8,0" />
                        <Button Content="ファイルに保存"
                            Width="120"
                            Command="{Binding SaveHistoryToFileCommand}"
                            Style="{StaticResource MaterialDesignPaperButton}"
                            Margin="0,0,8,0" />
                    </StackPanel>
                </DockPanel>
            </Grid>
        </Grid>

        <!-- 左ペインの右上に直角三角形を配置（右上に開いた形） -->
        <Canvas Grid.Column="0" Panel.ZIndex="999" HorizontalAlignment="Right" VerticalAlignment="Top">
            <Path Fill="Yellow"
                Data="M 0,0 L 8,0 L 8,8 Z"
                Cursor="Hand"
                Canvas.Right="0"
                Canvas.Top="0">
                <Path.InputBindings>
                    <MouseBinding MouseAction="LeftClick"
                                Command="{Binding ShowLeftPaneOnlyCommand}" />
                </Path.InputBindings>
            </Path>
        </Canvas>

        <!-- 右ペインの右上に直角三角形を配置（右上に開いた形） -->
        <Canvas Grid.Column="2" Panel.ZIndex="999" HorizontalAlignment="Right" VerticalAlignment="Top">
            <Path Fill="Yellow"
                Data="M 0,0 L 8,0 L 8,8 Z"
                Cursor="Hand"
                Canvas.Right="0"
                Canvas.Top="0">
                <Path.InputBindings>
                    <MouseBinding MouseAction="LeftClick"
                                Command="{Binding ShowRightPaneOnlyCommand}" />
                </Path.InputBindings>
            </Path>
        </Canvas>
    </Grid>
</Window>